apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.protobuf'
apply plugin: 'kotlin-kapt'
android {

    compileSdkVersion 30
    buildToolsVersion "29.0.2"

    protobuf {
        // Configure the protoc executable
        protoc {
            if (osdetector.os == "osx") {
                // 为了处理 M1 芯片 MacBook Pro 的编译问题
                artifact = "com.google.protobuf:protoc:3.5.1:osx-x86_64"
            } else {
                artifact = "com.google.protobuf:protoc:3.5.1"
            }
        }


        generateProtoTasks {
            all().each { task ->
                task.group "proto"
                task.builtins {
                    remove java
                }
                task.builtins {
                    java {
                    }
                }
                task.doLast{
                    println("generateProtoTasks---${task.name}----end")
                }
                task.doFirst{
                    println("generateProtoTasks---${task.name}----start")
                }
//                task.dependsOn onPbBefore
//                onPbBefore.finalizedBy task
                if(task.name == "generateReleaseProto"){
                    task.finalizedBy onPbAfter
                    onPbAfter.dependsOn task
                }
            }


        }
    }



}









dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    println("TestTask执行dependencies")
}

task onPbBefore{
    doFirst {
        println("generateProtoTasks--------onPbBefore")
    }
}

task onPbAfter{
    doFirst {
        println("generateProtoTasks-----------onPbAfter")

        // 这里可以执行对生成的java类处理



    }
}

