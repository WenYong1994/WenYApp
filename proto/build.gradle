apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.google.protobuf'
apply plugin: 'com.chenenyu.router'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version
    protobuf {
        // Configure the protoc executable
        protoc {
            if (osdetector.os == "osx") {
                // 为了处理 M1 芯片 MacBook Pro 的编译问题
                artifact = "com.google.protobuf:protoc:3.5.1:osx-x86_64"
            } else {
                artifact = "com.google.protobuf:protoc:3.5.1"
            }
        }

        plugins {
            javalite {
                artifact = 'com.google.protobuf:protobuf-java:3.5.1'
            }
            myCustomPlugin{
                path = file('libs/protoEnumOpt-1.0-SNAPSHOT.jar')
            }

        }

        generateProtoTasks {
            all().each { task ->
                task.group "proto"
                task.builtins {
                    remove java
                }
                task.builtins {
                    java {}
                }
            }
        }
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation files('libs/protoEnumOpt-1.0-SNAPSHOT.jar')
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}